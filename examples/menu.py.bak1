#! /usr/bin/env python
# -*- python -*-
# Generated by PAGE version 4.0.1
# In conjuction with Tcl version 8.6
#    Aug. 31, 2013 08:21:19 AM
import sys

py2 = py30 = py31 = False
version = sys.hexversion
if version >= 0x020600F0 and version < 0x03000000 :
    py2 = True    # Python 2.6 or 2.7
    from Tkinter import *
    import ttk
elif version >= 0x03000000 and version < 0x03010000 :
    py30 = True
    from tkinter import *
    import ttk
elif version >= 0x03010000:
    py31 = True
    from tkinter import *
    import tkinter.ttk as ttk
else:
    print ("""
    You do not have a version of python supporting ttk widgets..
    You need a version >= 2.6 to execute PAGE modules.
    """)
    sys.exit()



def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    root.title('New_Toplevel_1')
    root.geometry('600x450+650+150')
    set_Tk_var()
    w = New_Toplevel_1 (root)
    init()
    root.mainloop()

w = None
def create_New_Toplevel_1 (root):
    '''Starting point when module is imported by another program.'''
    global w, w_win
    if w: # So we have only one instance of window.
        return
    w = Toplevel (root)
    w.title('New_Toplevel_1')
    w.geometry('600x450+650+150')
    set_Tk_var()
    w_win = New_Toplevel_1 (w)
    init()
    return w_win

def destroy_New_Toplevel_1 ():
    global w
    w.destroy()
    w = None


def set_Tk_var():
    # These are Tk variables used passed to Tkinter and must be
    # defined before the widgets using them are created.
    global Charity
    Charity = StringVar()

    global Check_1
    Check_1 = StringVar()

    global Check_2
    Check_2 = StringVar()

    global IRS
    IRS = StringVar()

    global Radio_A
    Radio_A = StringVar()

    global Radio_B
    Radio_B = StringVar()


def init():
    pass



def check1():
        print ('check1')
        sys.stdout.flush()

def check2():
        print ('check2')
        sys.stdout.flush()

def copy():
        print ('copy')
        sys.stdout.flush()

def cut():
        print ('cut')
        sys.stdout.flush()

def paste():
        print ('paste')
        sys.stdout.flush()

def quit():
        print ('quit')
        sys.stdout.flush()

def radio_a():
        print ('radio_a')
        sys.stdout.flush()

def radio_b():
        print ('radio_b')
        sys.stdout.flush()

def save():
        print ('save')
        sys.stdout.flush()


class New_Toplevel_1:
    def __init__(self, master=None):
        _bgcolor = 'wheat'  # X11 color: #f5deb3
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#b2c9f4' # Closest X11 color: 'SlateGray2'
        _ana1color = '#eaf4b2' # Closest X11 color: '{pale goldenrod}' 
        _ana2color = '#f4bcb2' # Closest X11 color: 'RosyBrown2' 
        TkMenuFont = "-family sans-serif -size -12 -weight normal -slant roman -underline 0 -overstrike 0"
        font11 = "-family {Droid Sans Mono} -size 14 -weight normal -slant roman -underline 0 -overstrike 0"
        master.configure(background=_bgcolor)
        master.configure(highlightbackground="wheat")
        master.configure(highlightcolor="black")


        self.menubar = Menu(master,font=font11,bg='#ff0000',fg=_fgcolor)
        master.configure(menu = self.menubar)

        self.file = Menu(master,tearoff=0)
        self.menubar.add_cascade(menu=self.file,
                background="#00ffff",
                compound="left",
                font=('Purisa',12,'normal','roman',),
                foreground="#000000",
                label="File")
        self.file.add_command(
                activebackground="#d9d9d9",
                activeforeground="#000000",
                background="#ffff00",
                command=save,
                font=TkMenuFont,
                foreground="#000000",
                label="Save")
        self.file.add_separator(
                background="#ffff00")
        self._img0 = PhotoImage(file="examples/stop.gif")
        self.file.add_command(
                activebackground="#d9d9d9",
                activeforeground="#000000",
                background="#ffff00",
                command=quit,
                compound="top",
                font=TkMenuFont,
                foreground="#000000",
                image=self._img0,
                label="Quit")
        self.edit = Menu(master,tearoff=0)
        self.menubar.add_cascade(menu=self.edit,
                background="#990000",
                font=('Purisa',12,'normal','roman',),
                foreground="#ffff00",
                label="Edit")
        self.edit.add_command(
                activebackground="#d9d9d9",
                activeforeground="#000000",
                background="#ff0000",
                command=cut,
                font=TkMenuFont,
                foreground="#000000",
                label="Cut")
        self.edit.add_command(
                activebackground="#d9d9d9",
                activeforeground="#000000",
                background="#ff0000",
                command=copy,
                font=TkMenuFont,
                foreground="#000000",
                label="Copy")
        self.edit.add_separator(
                background="#ff0000")
        self.edit.add_command(
                activebackground="#d9d9d9",
                activeforeground="#000000",
                background="#ff0000",
                command=paste,
                font=TkMenuFont,
                foreground="#000000",
                label="Paste")
        self.other = Menu(master,tearoff=0)
        self.edit.add_cascade(menu=self.other,
                activebackground="#d9d9d9",
                activeforeground="#000000",
                background="#ff0000",
                font=TkMenuFont,
                foreground="#000000",
                label="Other")
        self.other.add_command(
                background="#ffff00",
                font=TkMenuFont,
                label="Post")
        self.other.add_command(
                background="#ffff00",
                font=TkMenuFont,
                label="Sync")
        self.still = Menu(master,tearoff=0)
        self.other.add_cascade(menu=self.still,
                background="#ffff00",
                font=TkMenuFont,
                label="Still")
        self.still.add_command(
                background="#ff0000",
                font=TkMenuFont,
                label="Yes")
        self.still.add_command(
                background="#ff0000",
                font=TkMenuFont,
                label="No")
        self.still.add_checkbutton(
                variable=IRS,
                background="#ff0000",
                font=TkMenuFont,
                label="IRS")
        self.still.add_checkbutton(
                variable=Charity,
                background="#ff0000",
                font=TkMenuFont,
                label="Charity")
        self.more = Menu(master,tearoff=0)
        self.still.add_cascade(menu=self.more,
                background="#ff0000",
                font=TkMenuFont,
                label="More")
        self.more.add_radiobutton(
                value=Radio_A,
                activebackground="#d9d9d9",
                activeforeground="#000000",
                background="#ffff00",
                command=radio_a,
                font=TkMenuFont,
                foreground="#000000",
                label="Radio-A")
        self.more.add_radiobutton(
                value=Radio_B,
                activebackground="#d9d9d9",
                activeforeground="#000000",
                background="#00ff00",
                command=radio_b,
                font=TkMenuFont,
                foreground="#000000",
                label="Radio-B")
        self._img1 = PhotoImage(file="examples/openfold.gif")
        self.more.add_checkbutton(
                selectcolor="#990000",
                variable=Check_1,
                activebackground="#d9d9d9",
                activeforeground="#000000",
                background="#ff0000",
                command=check1,
                compound="left",
                font=TkMenuFont,
                foreground="#000000",
                image=self._img1,
                label="Check 1")
        self.more.add_checkbutton(
                variable=Check_2,
                activebackground="#d9d9d9",
                activeforeground="#000000",
                background="#ff0000",
                command=check2,
                font=TkMenuFont,
                foreground="#000000",
                label="Check 2")








if __name__ == '__main__':
    vp_start_gui()



