#! /usr/bin/env python
# -*- python -*-
# Generated by PAGE version 4.0
# In conjuction with Tcl version 8.6
#    Feb. 25, 2013 10:18:45 AM
import sys

py2 = py30 = py31 = False
version = sys.hexversion
if version >= 0x020600F0 and version < 0x03000000 :
    py2 = True    # Python 2.6 or 2.7
    from Tkinter import *
    import ttk
elif version >= 0x03000000 and version < 0x03010000 :
    py30 = True
    from tkinter import *
    import ttk
elif version >= 0x03010000:
    py31 = True
    from tkinter import *
    import tkinter.ttk as ttk
else:
    print ("""
    You do not have a version of python supporting ttk widgets..
    You need a version >= 2.6 to execute PAGE modules.
    """)
    sys.exit()


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    root.title('New_Toplevel_1')
    root.geometry('600x450+650+150')
    w = New_Toplevel_1 (root)
    init()
    root.mainloop()

w = None
def create_New_Toplevel_1 (root):
    '''Starting point when module is imported by another program.'''
    global w, w_win
    if w: # So we have only one instance of window.
        return
    w = Toplevel (root)
    w.title('New_Toplevel_1')
    w.geometry('600x450+650+150')
    w_win = New_Toplevel_1 (w)
    init()
    return w_win

def destroy_New_Toplevel_1 ():
    global w
    w.destroy()
    w = None




def init():
    pass




class New_Toplevel_1:
    def __init__(self, master=None):
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d1d80b' # Closest X11 color: 'yellow3'
        _ana1color = '#780bd8' # Closest X11 color: 'purple3' 
        _ana2color = '#0b6bd8' # Closest X11 color: 'DodgerBlue3' 
        font10 = "-family {DejaVu Sans} -size 14 -weight normal -slant roman -underline 0 -overstrike 0"
        self.style = ttk.Style()
        print "theme names:", self.style.theme_names()
        print "theme used:", self.style.theme_use()
        #self.style.theme_use('xptheme')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font=font10)
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.style.map('.',foreground=
            [('selected', 'black'), ('active','white')])


        self.style.configure('TNotebook.Tab',background=_bgcolor)
        self.style.configure('TNotebook.Tab',foreground=_fgcolor)
        self.style.map('TNotebook.Tab',background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.TNotebook1 = ttk.Notebook(master)
        self.TNotebook1.place(relx=0.43,rely=0.16,relheight=0.51,relwidth=0.5)
        self.TNotebook1.configure(width=300)
        self.TNotebook1.configure(takefocus="")
        self.TNotebook1_pg0 = ttk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_pg0, padding=3)
        self.TNotebook1.tab(0, text="Page 1",underline="-1",)
        self.TNotebook1_pg1 = ttk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_pg1, padding=3)
        self.TNotebook1.tab(1, text="Page 2",underline="-1",)

        self.Label1 = Label (self.TNotebook1_pg0)
        self.Label1.place(relx=0.23,rely=0.3,height=24,width=119)
        self.Label1.configure(font=font10)
        self.Label1.configure(text='''Label - Page 1''')

        self.TLabel1 = ttk.Label (self.TNotebook1_pg1)
        self.TLabel1.place(relx=0.17,rely=0.45,height=22,width=123)
        self.TLabel1.configure(background=_bgcolor)
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(relief="flat")
        self.TLabel1.configure(text='''Tlabel - Page 2''')

        self.Button1 = Button (master)
        self.Button1.place(relx=0.1,rely=0.22,height=30,width=77)
        self.Button1.configure(activebackground="#0b6bd8")
        self.Button1.configure(activeforeground="white")
        self.Button1.configure(font=font10)
        self.Button1.configure(text='''Button''')

        self.TButton1 = ttk.Button (master)
        self.TButton1.place(relx=0.1,rely=0.42,height=31,width=101)
        self.TButton1.configure(takefocus="")
        self.TButton1.configure(text='''Tbutton''')

        self.style.map('TRadiobutton',background=
            [('selected', _bgcolor), ('active',_ana2color)])
        self.TRadiobutton1 = ttk.Radiobutton (master)
        self.TRadiobutton1.place(relx=0.08,rely=0.67,relheight=0.05
                ,relwidth=0.13)
        self.TRadiobutton1.configure(takefocus="")
        self.TRadiobutton1.configure(text='''TRadio''')







if __name__ == '__main__':
    vp_start_gui()



